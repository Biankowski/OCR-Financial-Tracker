// This Code is provided by Google. I made a few changes to adapt to my project.
// Go to this website to check the documantaion:https://developers.google.com/sheets/api/quickstart/dotnet?hl=en

using Google.Apis.Auth.OAuth2;
using Google.Apis.Sheets.v4;
using Google.Apis.Sheets.v4.Data;

namespace FinacialHelper
{
    public static class SheetConnector
    {
        // Here you need to change the "ApplicationName, "SpreadsheetId" and "sheet" variables with your own values.
        static readonly string[] Scopes = { SheetsService.Scope.Spreadsheets };
        static readonly string ApplicationName = "<your application name goes here>";
        static readonly string SpreadsheetId = "<your spreadsheet id goes here>";
        static readonly string sheet = "<your sheet tab name goes here> ";
        static SheetsService? service;

        public static void Connect()
        {
            GoogleCredential? credential;
            // Here you need to pass your own json File.
            using (var stream = new FileStream("<your json file goes here>.json", FileMode.Open, FileAccess.Read))
            {
                credential = GoogleCredential.FromStream(stream).CreateScoped(Scopes);
            }
            service = new SheetsService(new Google.Apis.Services.BaseClientService.Initializer()
            {
                HttpClientInitializer = credential,
                ApplicationName = ApplicationName,
            });
        }

        // This Method is responsible to send the data to your sheet. It recieves a List parameter, wich will be the List generated by the FilterText() Method.
        public static void CreateEntry(List<object> resultList)
        {
            var range = $"{sheet}!A:C";
            var valueRange = new ValueRange();

            var objectList = resultList.ToList();
            valueRange.Values = new List<IList<object>> { objectList };

            var appendRequest = service.Spreadsheets.Values.Append(valueRange, SpreadsheetId, range);
            appendRequest.ValueInputOption = SpreadsheetsResource.ValuesResource.AppendRequest.ValueInputOptionEnum.USERENTERED;
            var appendResponse = appendRequest.Execute();
        }
    }
}
